version: '3.8'

services:
  nginx:
    image: nginx
    depends_on:
      - wordpress
    container_name: nginx
    build:
      context: ./requirements/nginx
    ports:
      - "443:443"
    networks:
      - ricky
    restart: always
    volumes:
      - wordpress_data:/var/www/html  

  wordpress:
    image: wordpress
    depends_on:
      mariadb:
        condition: service_healthy
    container_name: wordpress
    build:
      context: ./requirements/wordpress
    env_file: .env
    networks:
      - ricky
    expose:
      - 9000
    restart: always
    volumes:
      - wordpress_data:/var/www/html  

  mariadb:
    image: mariadb
    container_name: mariadb
    build:
      context: ./requirements/mariadb
    expose:
      - 3306
    env_file: .env
    networks:
      - ricky
    healthcheck:
      interval: 5s
      timeout: 30s
      retries: 10
      start_period: 5s
      test: ["CMD", "mysqladmin", "ping", "--silent"]
    restart: always
    volumes:
      - mariadb_data:/var/lib/mysql #mariadb is a fork of mysql so theres compatibility

volumes:
  mariadb_data:
    driver: local
    driver_opts:
      type: none
      device: "${MARIADB_VOL}"
      o: bind
  wordpress_data:
    driver: local
    driver_opts:
      type: none
      device: "${WORDPRESS_VOL}"
      o: bind

networks: #allows the containers to "talk to eachother"
  ricky:
    driver: bridge
    # When you use the "bridge" network driver, 
    # containers attached to the same network can communicate with each other using their container names as hostnames.
